tmp <- as.factor(D$Reproduced)
cbind(tmp,D$Reproduced)
###
### model probability of producing seeds
###
tmp <- as.numeric(as.factor(D$Reproduced))
cbind(tmp,D$Reproduced)
###
### model probability of producing seeds
###
tmp <- as.numeric(as.factor(D$Reproduced))-1
cbind(tmp,D$Reproduced)
# load packages
library(dplyr)
prob_reprod <- D %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(D$Reproduced),sd=sd(D$Reproduced) )
warnings()
View(prob_reprod)
# convert N/Y to 0/1
D$Reproduced <- as.numeric(as.factor(D$Reproduced))-1
prob_reprod <- D %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(D$Reproduced),sd=sd(D$Reproduced) )
View(prob_reprod)
prob_reprod <- D %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(Reproduced),sd=sd(Reproduced) )
View(prob_reprod)
plot(prob_reprod$mean[prob_reprod$Treatment=="control"],
prob_reprod$mean[prob_reprod$Treatment=="removal"])
View(prob_reprod)
prob_reprod$mean[prob_reprod$Treatment=="control"]
prob_reprod$mean[prob_reprod$Treatment=="removal"]
View(prob_reprod)
table(prob_reprod$Treatment)
which(D$Treatment=="removal ")
source("C:/repos/bromecast-data/satellites/code/demography_prelim_analysis.R")
plot(prob_reprod$mean[prob_reprod$Treatment=="control"],
prob_reprod$mean[prob_reprod$Treatment=="removal"])
abline(0,1)
plot(prob_reprod$mean[prob_reprod$Treatment=="control"],
prob_reprod$mean[prob_reprod$Treatment=="removal"],
ylab="Removal",xlab="Control")
abline(0,1)
plot(prob_reprod$mean[prob_reprod$Treatment=="control"],
prob_reprod$mean[prob_reprod$Treatment=="removal"],
ylab="Removal",xlab="Control", main="Prob. reproduction")
abline(0,1)
plot(prob_reprod$mean[prob_reprod$Treatment=="control"],
prob_reprod$mean[prob_reprod$Treatment=="removal"],
ylab="Removal",xlab="Control", xlim=c(0,1), ylim=c(0,1),main="Probability of reproduction")
abline(0,1)
fecD <- subset(D,D$Fecundity>0)
hist(fecD)
hist(fecD$Fecundity)
hist(log(fecD$Fecundity))
mean_fecundity <- fecD %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(log(Fecundity)),sd=sd(log(Fecundity)) )
plot(mean_fecundity$mean[mean_fecundity$Treatment=="control"],
mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
ylab="Removal",xlab="Control", xlim=c(0,4), ylim=c(0,4),main="Fecundity")
plot(mean_fecundity$mean[mean$Treatment=="control"],
mean_fecundity$mean[mean$Treatment=="removal"],
ylab="Removal",xlab="Control", xlim=c(0,4), ylim=c(0,4),main="Fecundity")
abline(0,1)
mean_fecundity <- fecD %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(log(Fecundity)),sd=sd(log(Fecundity)) )
mean_fecundity
plot(mean_fecundity$mean[mean_fecundity$Treatment=="control"],
mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
ylab="Removal",xlab="Control", xlim=c(0,4), ylim=c(0,4),main="Fecundity")
mean_fecundity <- fecD %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(log(Fecundity)),sd=sd(log(Fecundity)) )
table(mean_fecundity$Treatment)
# super minimal cleaning, just trying
# to get a look at removal effects on
# fecundity
# start clean
rm(list=ls())
# To use relative paths, we need to set working directory to source file location
# (this method only works on Rstudio)
library(rstudioapi)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path )) # set working directory to location of this file
# load packages
library(dplyr)
# import data
D <- read.csv("../rawdata/Satellite_demography_2021-2022.csv",header=T)
print(unique(D$SiteCode))
# rename some columns
names(D)[which(names(D)=="Treatment..control.OR.removal.")] <- "Treatment"
names(D)[which(names(D)=="Emerged..Yes.or.No.")] <- "Emerged"
names(D)[which(names(D)=="Seeds..Yes.or.No.")] <- "Reproduced"
names(D)[which(names(D)=="Seeds.produced")] <- "Fecundity"
# fix bad values
D$Treatment[D$Treatment=="removal "] <- "removal"
# remove Boise sites (no harvest data)
D <- subset(D,D$SiteCode!="Boise High" & D$SiteCode!="Boise Low")
# replace NAs with real zeros
# TO DO: use notes column to find and retain "real" NAs (missing plants),
# in this version, those are included as zeros
D$Reproduced[is.na(D$Reproduced) & D$Emerged=="N"] <- "N"
D$Fecundity[is.na(D$Fecundity) & D$Reproduced=="N"] <- 0
# subset to complete observations
D <- subset(D,!is.na(D$Fecundity))
# remove one more record with 0 for fecundity but NA for reproduced
D <- subset(D,!is.na(D$Reproduced))
###
### analyze probability of producing seeds
###
# convert N/Y to 0/1
D$Reproduced <- as.numeric(as.factor(D$Reproduced))-1
prob_reprod <- D %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(Reproduced),sd=sd(Reproduced) )
plot(prob_reprod$mean[prob_reprod$Treatment=="control"],
prob_reprod$mean[prob_reprod$Treatment=="removal"],
ylab="Removal",xlab="Control", xlim=c(0,1), ylim=c(0,1),main="Probability of reproduction")
abline(0,1)
###
### model fecundity, conditional on seed production
###
fecD <- subset(D,D$Fecundity>0)
mean_fecundity <- fecD %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(log(Fecundity)),sd=sd(log(Fecundity)) )
plot(mean_fecundity$mean[mean_fecundity$Treatment=="control"],
mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
ylab="Removal",xlab="Control", xlim=c(0,4), ylim=c(0,4),main="Fecundity")
table(mean_fecundity$Treatment)
dim(mean_fecundity)
View(mean_fecundity)
View(mean_fecundity)
# OttS1 has no observations for removals, cut that site for now
fecD <- subset(D, D$SiteCode!="OttS1")
fecD <- subset(D,D$Fecundity>0)
# OttS1 has no observations for removals, cut that site for now
fecD <- subset(fecD, fecD$SiteCode!="OttS1")
mean_fecundity <- fecD %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(log(Fecundity)),sd=sd(log(Fecundity)) )
plot(mean_fecundity$mean[mean_fecundity$Treatment=="control"],
mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
ylab="Removal",xlab="Control", xlim=c(0,4), ylim=c(0,4),main="Fecundity")
abline(0,1)
View(mean_fecundity)
mean_fecundity <- fecD %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(log(Fecundity)),q05=quantile(log(Fecundity),0.05),q95=quantile(log(Fecundity),0.95) )
View(mean_fecundity)
sum(fecD$Fecundity==0)
removal <- c(0.1,1,2,4,8,16)
control <- 1.5*removal
plot(removal,control,type="l")
removal <- c(0.1,1,2,4,8,16)
control <- 1.5*removal
plot(removal,control,type="l",col="red")
abline(0,1)
plot(log(removal),log(control),type="l",col="red")
abline(0,1)
removal <- c(0.1,1,2,4,8,16)
control <- 0.5*removal
plot(removal,control,type="l",col="red")
abline(0,1)
plot(log(removal),log(control),type="l",col="red")
abline(0,1)
rm(removal,control)
# super minimal cleaning, just trying
# to get a look at removal effects on
# fecundity
# start clean
rm(list=ls())
# To use relative paths, we need to set working directory to source file location
# (this method only works on Rstudio)
library(rstudioapi)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path )) # set working directory to location of this file
# load packages
library(dplyr)
# confirm log approach works when competition has
# multiplicative effect on performance
removal <- c(0.1,1,2,4,8,16)
control <- 0.5*removal
plot(removal,control,type="l",col="red")
abline(0,1)
plot(log(removal),log(control),type="l",col="red")
abline(0,1)
rm(removal,control)
# import data
D <- read.csv("../rawdata/Satellite_demography_2021-2022.csv",header=T)
print(unique(D$SiteCode))
# rename some columns
names(D)[which(names(D)=="Treatment..control.OR.removal.")] <- "Treatment"
names(D)[which(names(D)=="Emerged..Yes.or.No.")] <- "Emerged"
names(D)[which(names(D)=="Seeds..Yes.or.No.")] <- "Reproduced"
names(D)[which(names(D)=="Seeds.produced")] <- "Fecundity"
# fix bad values
D$Treatment[D$Treatment=="removal "] <- "removal"
# remove Boise sites (no harvest data)
D <- subset(D,D$SiteCode!="Boise High" & D$SiteCode!="Boise Low")
# replace NAs with real zeros
# TO DO: use notes column to find and retain "real" NAs (missing plants),
# in this version, those are included as zeros
D$Reproduced[is.na(D$Reproduced) & D$Emerged=="N"] <- "N"
D$Fecundity[is.na(D$Fecundity) & D$Reproduced=="N"] <- 0
# subset to complete observations
D <- subset(D,!is.na(D$Fecundity))
# remove one more record with 0 for fecundity but NA for reproduced
D <- subset(D,!is.na(D$Reproduced))
###
### analyze probability of producing seeds
###
# convert N/Y to 0/1
D$Reproduced <- as.numeric(as.factor(D$Reproduced))-1
prob_reprod <- D %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(Reproduced),sd=sd(Reproduced) )
plot(prob_reprod$mean[prob_reprod$Treatment=="removal"],
prob_reprod$mean[prob_reprod$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,1), ylim=c(0,1),main="Probability of reproduction")
abline(0,1)
# is slope different from 1?
m1 <- lm(prob_reprod$mean[prob_reprod$Treatment=="control"] ~ 0 + prob_reprod$mean[prob_reprod$Treatment=="removal"])
summary(m1)
abline(m1,col="red")
# is slope different from 1?
m1 <- lm(prob_reprod$mean[prob_reprod$Treatment=="control"] ~ prob_reprod$mean[prob_reprod$Treatment=="removal"])
abline(m1,col="red")
summary(m1)
plot(prob_reprod$mean[prob_reprod$Treatment=="removal"],
prob_reprod$mean[prob_reprod$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,1), ylim=c(0,1),main="Probability of reproduction")
abline(0,1,lty="dotted")
# is slope different from 1?
m1 <- lm(prob_reprod$mean[prob_reprod$Treatment=="control"] ~ prob_reprod$mean[prob_reprod$Treatment=="removal"])
abline(m1,col="red")
summary(m1)
fecD <- subset(D,D$Fecundity>0)
# OttS1 has no observations for removals, just 3 for controls, cut that site for now
fecD <- subset(fecD, fecD$SiteCode!="OttS1")
mean_fecundity <- fecD %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(log(Fecundity)),q05=quantile(log(Fecundity),0.05),q95=quantile(log(Fecundity),0.95) )
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,4), ylim=c(0,4),main="log Fecundity")
abline(0,1)
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,4), ylim=c(0,4),main="log Fecundity")
abline(0,1,"dotted")
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,4), ylim=c(0,4),main="log Fecundity")
abline(0,1,lty="dotted")
names(fecD)
m2 <- glm(log(Fecundity) ~ Treatment, data = fecD)
summary(m2)
m2 <- glm(log(Fecundity) ~ Treatment*SiteCode, data = fecD)
plot(m2)
summary(m2)
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,4), ylim=c(0,4),main="log Fecundity")
head(mean_fecundity)
?arrows
# removal confidence intervals
arrows(x0=mean_fecundity$mean[mean_fecundity$Treatment=="removal"]-mean_fecundity$q05[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$mean[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$mean[mean_fecundity$Treatment=="removal"]+mean_fecundity$q95[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$mean[mean_fecundity$Treatment=="control"],angle=90,length=0.1,code=3)
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,6), ylim=c(0,6),main="log Fecundity")
# removal confidence intervals
arrows(x0=mean_fecundity$mean[mean_fecundity$Treatment=="removal"]-mean_fecundity$q05[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$mean[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$mean[mean_fecundity$Treatment=="removal"]+mean_fecundity$q95[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$mean[mean_fecundity$Treatment=="control"],angle=90,length=0,code=3)
mean_fecundity
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,6), ylim=c(0,6),main="log Fecundity")
# removal confidence intervals
arrows(x0=mean_fecundity$q05[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$mean[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$q95[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$mean[mean_fecundity$Treatment=="control"],angle=90,length=0,code=3)
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,6), ylim=c(0,6),pch=16,main="log Fecundity")
# removal confidence intervals
arrows(x0=mean_fecundity$q05[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$mean[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$q95[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$mean[mean_fecundity$Treatment=="control"],angle=90,length=0,code=3)
abline(0,1,lty="dotted")
# controls confidence intervals
arrows(x0=mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$q05[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$q95[mean_fecundity$Treatment=="control"],angle=90,length=0,code=3)
# Use aridity index from CHELSA
aridD <- read.csv("../deriveddata/aridity_index_feb2023_btclim.csv",header=T)
View(aridD)
names(aridD)
aridD <- aridD[,c("Site.Code","Latitude","Longitude","AI","gs.AI")]
# Use aridity index from CHELSA
aridD <- read.csv("../deriveddata/aridity_index_feb2023_btclim.csv",header=T)
aridD <- aridD[,c("Site.code","Latitude","Longitude","AI","gs.AI")]
head(ariD)
head(aridD)
# super minimal cleaning, just trying
# to get a look at removal effects on
# fecundity
# start clean
rm(list=ls())
# To use relative paths, we need to set working directory to source file location
# (this method only works on Rstudio)
library(rstudioapi)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path )) # set working directory to location of this file
# load packages
library(dplyr)
# confirm log approach works when competition has
# multiplicative effect on performance
removal <- c(0.1,1,2,4,8,16)
control <- 0.5*removal
plot(removal,control,type="l",col="red")
abline(0,1)
plot(log(removal),log(control),type="l",col="red")
abline(0,1)
rm(removal,control)
# import data
D <- read.csv("../rawdata/Satellite_demography_2021-2022.csv",header=T)
print(unique(D$SiteCode))
# rename some columns
names(D)[which(names(D)=="Treatment..control.OR.removal.")] <- "Treatment"
names(D)[which(names(D)=="Emerged..Yes.or.No.")] <- "Emerged"
names(D)[which(names(D)=="Seeds..Yes.or.No.")] <- "Reproduced"
names(D)[which(names(D)=="Seeds.produced")] <- "Fecundity"
# fix bad values
D$Treatment[D$Treatment=="removal "] <- "removal"
# remove Boise sites (no harvest data)
D <- subset(D,D$SiteCode!="Boise High" & D$SiteCode!="Boise Low")
# replace NAs with real zeros
# TO DO: use notes column to find and retain "real" NAs (missing plants),
# in this version, those are included as zeros
D$Reproduced[is.na(D$Reproduced) & D$Emerged=="N"] <- "N"
D$Fecundity[is.na(D$Fecundity) & D$Reproduced=="N"] <- 0
# subset to complete observations
D <- subset(D,!is.na(D$Fecundity))
# remove one more record with 0 for fecundity but NA for reproduced
D <- subset(D,!is.na(D$Reproduced))
###
### pull climate data for each site
###
# Use aridity index from CHELSA
aridD <- read.csv("../deriveddata/aridity_index_feb2023_btclim.csv",header=T)
aridD <- aridD[,c("Site.code","Latitude","Longitude","AI","gs.AI")]
###
### analyze probability of producing seeds
###
# convert N/Y to 0/1
D$Reproduced <- as.numeric(as.factor(D$Reproduced))-1
prob_reprod <- D %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(Reproduced),sd=sd(Reproduced) )
plot(prob_reprod$mean[prob_reprod$Treatment=="removal"],
prob_reprod$mean[prob_reprod$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,1), ylim=c(0,1),main="Probability of reproduction")
abline(0,1,lty="dotted")
# # site level analysis (better to do GLM on individual data)
# # is slope different from 1?
# m1 <- lm(prob_reprod$mean[prob_reprod$Treatment=="control"] ~ prob_reprod$mean[prob_reprod$Treatment=="removal"])
# abline(m1,col="red")
# summary(m1)
###
### model fecundity, conditional on seed production
###
fecD <- subset(D,D$Fecundity>0)
# OttS1 has no observations for removals, just 3 for controls, cut that site for now
fecD <- subset(fecD, fecD$SiteCode!="OttS1")
mean_fecundity <- fecD %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(log(Fecundity)),q05=quantile(log(Fecundity),0.05),q95=quantile(log(Fecundity),0.95) )
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,6), ylim=c(0,6),pch=16,main="log Fecundity")
# removals confidence intervals
arrows(x0=mean_fecundity$q05[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$mean[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$q95[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$mean[mean_fecundity$Treatment=="control"],angle=90,length=0,code=3)
# controls confidence intervals
arrows(x0=mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$q05[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$q95[mean_fecundity$Treatment=="control"],angle=90,length=0,code=3)
abline(0,1,lty="dotted")
# link site means to aridity data
head(mean_fecundity)
# link site means to aridity data
# first go from long to wide
tmp <- mean_fecundity %>% pivot_wider(names_from=Treatment, values_from=mean)
library(tidr)
library(tidyr)
# link site means to aridity data
# first go from long to wide
tmp <- mean_fecundity %>% pivot_wider(names_from=Treatment, values_from=mean)
head(tmp)
# link site means to aridity data
# first go from long to wide
tmp <- mean_fecundity %>% select(SiteCode,Treatment,mean) %>%
pivot_wider(names_from=Treatment, values_from=mean)
tmp
# link site means to aridity data
# first go from long to wide
tmp <- mean_fecundity %>% select(SiteCode,Treatment,mean, q05) %>%
pivot_wider(names_from=Treatment, values_from=c(mean, q05))
tmp
# link site means to aridity data
# first go from long to wide
tmp <- mean_fecundity %>% pivot_wider(names_from=Treatment, values_from=c(mean, q05, q95))
tmp
names(tmp)
# link site means to aridity data
# first go from long to wide
mean_fecundity <- mean_fecundity %>% pivot_wider(names_from=Treatment, values_from=c(mean, q05, q95))
mean_fecundity
names(aridD)[1] <- "SiteCode"
# Use aridity index from CHELSA
aridD <- read.csv("../deriveddata/aridity_index_feb2023_btclim.csv",header=T)
aridD <- aridD[,c("Site.code","Latitude","Longitude","AI","gs.AI")]
names(aridD)[1] <- "SiteCode"
# now merge Aridity index
mean_fecundity <- merge(mean_fecundity, aridD, all.x=T)
View(mean_fecundity)
plot(mean_fecundity$AI, mean_fecundity$mean_removal, pch=16, col="blue")
points(mean_fecundity$AI, mean_fecundity$mean_control, pch=16, col="red")
mean_fecundity$logratio <- mean_fecundity$mean_control - mean_fecundity$mean_removal
plot(mean_fecundity$AI, mean_fecundity$logratio)
cor.test(mean_fecundity$AI, mean_fecundity$logratio)
plot(mean_fecundity$gs.AI, mean_fecundity$logratio)
# try a few plots
plot(mean_fecundity$gs.AI, mean_fecundity$mean_removal, pch=16, col="blue")
points(mean_fecundity$gs.AI, mean_fecundity$mean_control, pch=16, col="red")
# Use aridity index from CHELSA
aridD <- read.csv("../deriveddata/aridity_index_feb2023_btclim.csv",header=T)
names(aridD)
mean_fecundity
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,6), ylim=c(0,6),pch=16,main="log Fecundity")
# removals confidence intervals
arrows(x0=mean_fecundity$q05[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$mean[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$q95[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$mean[mean_fecundity$Treatment=="control"],angle=90,length=0,code=3)
mean_fecundity <- fecD %>% group_by(SiteCode,Treatment) %>%
summarize(mean=mean(log(Fecundity)),q05=quantile(log(Fecundity),0.05),q95=quantile(log(Fecundity),0.95) )
plot(mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
mean_fecundity$mean[mean_fecundity$Treatment=="control"],
xlab="Removal",ylab="Control", xlim=c(0,6), ylim=c(0,6),pch=16,main="log Fecundity")
# removals confidence intervals
arrows(x0=mean_fecundity$q05[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$mean[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$q95[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$mean[mean_fecundity$Treatment=="control"],angle=90,length=0,code=3)
# controls confidence intervals
arrows(x0=mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
y0=mean_fecundity$q05[mean_fecundity$Treatment=="control"],
x1=mean_fecundity$mean[mean_fecundity$Treatment=="removal"],
y1=mean_fecundity$q95[mean_fecundity$Treatment=="control"],angle=90,length=0,code=3)
abline(0,1,lty="dotted")
remotes::install_github("mikejohnson51/AOI") # suggested!
remotes::install_github("mikejohnson51/climateR")
# start clean
rm(list=ls())
# To use relative paths, we need to set working directory to source file location
# (this method only works on Rstudio)
library(rstudioapi)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path )) # set working directory to location of this file
# load packages
library(dplyr)
library(tidyr)
# confirm log approach works when competition has
# multiplicative effect on performance
removal <- c(0.1,1,2,4,8,16)
control <- 0.5*removal
plot(removal,control,type="l",col="red")
abline(0,1)
plot(log(removal),log(control),type="l",col="red")
abline(0,1)
rm(removal,control)
D <- read.csv("../rawdata/Satellite_demography_2021-2022.csv",header=T)
print(unique(D$SiteCode))
# rename some columns
names(D)[which(names(D)=="Treatment..control.OR.removal.")] <- "Treatment"
names(D)[which(names(D)=="Emerged..Yes.or.No.")] <- "Emerged"
names(D)[which(names(D)=="Seeds..Yes.or.No.")] <- "Reproduced"
names(D)[which(names(D)=="Seeds.produced")] <- "Fecundity"
# fix bad values
D$Treatment[D$Treatment=="removal "] <- "removal"
table(D$Treatment)
# fix bad values
D$Treatment[D$Treatment=="removal "] <- "removal"
D$Treatment[D$Treatment=="Removal "] <- "removal"
D$Treatment[D$Treatment=="Control "] <- "control"
table(D$Treatment)
D$Treatment[D$Treatment=="Removal"] <- "removal"
D$Treatment[D$Treatment=="Control"] <- "control"
table(D$Treatment)
View(D)
D <- read.csv("../rawdata/Satellite_demography_2021-2022.csv",header=T)
print(unique(D$SiteCode))
View(D)
D <- read.csv("../rawdata/Satellite_demography_2021-2022.csv",header=T)
View(D)
table(D$X)
which(D$X=="**for site: if no date then no plant at final census")
