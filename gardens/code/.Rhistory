source("C:/repos/bromecast-data/gardens/code/format_growthphenology_SheepStation.R")
# import raw growth and phenology data
rawD <- read.csv("../rawdata/phenology_Sheep_Station_2021-2022_MASTER.csv",header=T)
head(rawD)
unique(rawD$Plot)
sum(is.na$rawD$Plot)
sum(is.na(rawD$Plot))
View(rawD)
# import raw growth and phenology data
rawD <- read.csv("../rawdata/phenology_Sheep_Station_2021-2022_MASTER.csv",header=T)
unique(rawD$Plot)
dim(rawD)
# load packages
library(tidyr)
library(lubridate)
# reformat continuous plot numbering to block and subplot
names(rawD[names(rawD)=="Plot"]) <- "cum_plot""
# assign each individual plant a unique ID, link to positions
# reformat continuous plot numbering to block and subplot
names(rawD)[which(names(rawD)=="Plot")] <- "cum_plot"
head(rawD)
tmp <- data.frame(block=sort(rep(1:10,4)))
tmp
tmp <- data.frame(block=sort(rep(1:10,4)),
plot=rep(1:4,10),
cum_plot=1:40)
tmp
rawD<-merge(rawD,tmp)
head(rawD)
tail(rawD)
rm(tmp)
tmp <- data.frame(block=sort(rep(1:10,4)),
plot=rep(1:4,10),
cum_plot=1:40)
tmp
summary(rawD)
# put Date in date format
rawD$Date <- as_date(rawD$Date)
head(rawD)
# import raw growth and phenology data
rawD <- read.csv("../rawdata/phenology_Sheep_Station_2021-2022_MASTER.csv",header=T)
head(rawD)
# put Date in date format
rawD$Date <- mdy(rawD$Date)
head(rawD)
year(rawD$Date)
# reformat continuous plot numbering to block and subplot
names(rawD)[which(names(rawD)=="Plot")] <- "cum_plot"
tmp <- data.frame(block=sort(rep(1:10,4)),
plot=rep(1:4,10),
cum_plot=1:40)
rawD<-merge(rawD,tmp)
rm(tmp)
names(rawD)
# assign each individual plant a unique ID, link to grid positions
tmp <- rawD[,c("Site","Date","block","plot","x","y")]
head(tmp)
dim(tmp)
?unnique
?unique
tmp <- unique(tmp,MARGIN=2)
dim(tmp)
# assign each individual plant a unique ID, link to grid positions
tmp <- rawD[,c("Site","block","plot","x","y")]
tmp <- unique(tmp,MARGIN=2)
dim(tmp)
# remove capital letters from column headers
tmp <- tolower(names(rawD))
tmp
source("C:/repos/bromecast-data/gardens/code/format_growthphenology_SheepStation.R")
source("C:/repos/bromecast-data/gardens/code/format_growthphenology_SheepStation.R")
head(tmp)
plantID$site <- dosite
# assign each individual plant a unique ID, link to grid positions
tmp <- rawD[,c("site","block","plot","x","y")]
plantID <- unique(tmp,MARGIN=2)
plantID$site <- dosite
plantID$year <- doyear
# assign each individual plant a unique ID, link to grid positions
tmp <- rawD[,c("site","block","plot","x","y")]
plant_key <- unique(tmp,MARGIN=2)
plant_key$site <- dosite
plant_key$year <- doyear
plant_key$plantID <- paste0(dosite,doyear,1:nrow(plant_key))
head(plant_key)
plant_key$plantID <- paste0(dosite,doyear,"_",1:nrow(plant_key))
head(plant_key)
tail(plant_key)
# assign each individual plant a unique ID, link to grid positions
tmp <- rawD[,c("site","block","plot","x","y")]
plant_key <- unique(tmp,MARGIN=2)
plant_key$plantID <- paste0(dosite,doyear,"_",1:nrow(plant_key))
head(plant_key)
dim(rawD)
rawD <- merge(rawD,plantID)
source("C:/repos/bromecast-data/gardens/code/format_growthphenology_SheepStation.R")
head(rawD)
15*10*9
# start clean
rm(list=ls())
# To use relative paths, we need to set working directory to source file location
# (this method only works on Rstudio)
library(rstudioapi)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path )) # set working directory to location of this file
# load packages
library(tidyr)
library(lubridate)
doyear <- 2022 # growing season to do
dosite <- "SS" # code for focal site
# import raw growth and phenology data
rawD <- read.csv("../rawdata/phenology_Sheep_Station_2021-2022_MASTER.csv",header=T)
# remove capital letters from column headers
# (this will make it easier to harmonize data across sites)
names(rawD) <- tolower(names(rawD))
# change date field from character to date format
rawD$date <- mdy(rawD$date)
# IF plots are numbered 1 to 40, reformat to block and subplot
names(rawD)[which(names(rawD)=="plot")] <- "cum_plot"
tmp <- data.frame(block=sort(rep(1:10,4)),
plot=rep(1:4,10),
cum_plot=1:40)
rawD<-merge(rawD,tmp)
rm(tmp)
# assign each individual plant a unique ID, link to grid positions
tmp <- rawD[,c("site","block","plot","x","y")]
plant_key <- unique(tmp,MARGIN=2)
plant_key$plantID <- paste0(dosite,doyear,"_",1:nrow(plant_key))
rawD <- merge(rawD,plant_key)
?write.csv
write.csv(plant_key,file="../deriveddata/SS2022_plantID.csv",row.names=F)
write.csv(plant_key,file=paste0("../deriveddata/",dosite,doyear,"_plantID.csv"),row.names=F)
source("C:/repos/bromecast-data/gardens/code/format_growthphenology_SheepStation.R")
rm(plant_key)
# assign each individual plant a unique ID, link to grid positions
tmp <- rawD[,c("site","block","plot","x","y")]
plant_key <- unique(tmp,MARGIN=2)
plant_key$plantID <- paste0(dosite,doyear,"_",1:nrow(plant_key))
plant_key$site <- dosite
plant_key$year <- doyear
head(plant_key)
plant_key <- plant_key[,c(6,1,7,2:5)]
head(plant_key)
write.csv(plant_key,file=paste0("../deriveddata/",dosite,doyear,"_plantID.csv"),row.names=F)
rm(plant_key)
head(rawD)
# pull out and format phenology and growth data and notes for each plant
pgD <- rawD[,c("plantID","date","live","v","height","herbivory","frost_heave","tillers","harvested","notes")]
head(pgD)
rm(tmp)
View(pgD)
# pull out and format phenology and growth data and notes for each plant
pgD <- rawD[,c("plantID","date","live","v","length_mm","herbivory","frost_heave","tillers","harvested","notes")]
head(pgD)
View(rawD)
# get Julian day
pgD$jday <-yday(date)
# get Julian day
pgD$jday <-yday(pgD$date)
pgD$jday
# make fall days negative
pgD$jday <- ifelse(pgD$jday < 270, pgD$jday, pgD$jday-365)
hist(pgD$jday)
pgD[order(jday),]
# pull out and format phenology and growth data and notes for each plant
pgD <- rawD[,c("plantID","date","live","v","length_mm","herbivory","frost_heave","tillers","harvested","notes")]
# get Julian day
pgD$jday <-yday(pgD$date)
# make fall days negative
pgD$jday <- ifelse(pgD$jday < 270, pgD$jday, pgD$jday-365)
pgD[order(pgD$plantID,pgD$jday),]
pgD <- pgD[order(pgD$plantID,pgD$jday),]
head(pgD)
pgD <- select(pgD, -date)
library(dplyr)
pgD <- dplyr::select(pgD, -date)
head(pgD)
pgD <- pgD[,c(1,10,2:9)] # reorder columns
head(pgD)
View(pgD)
